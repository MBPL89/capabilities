{"title":"Capabilities network","markdown":{"yaml":{"title":"Capabilities network","format":{"html":{"toc":true}}},"headingText":"Load necessary libraries","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: false\n#| warning: false\nlibrary(igraph)\nlibrary(visNetwork)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(tidyverse)\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Load CSV file\ncsv_file <- \"capab_rmd_cat.csv\"  # Change to your actual file path\ndf <- read_csv(csv_file)\n```\n\n```{r}\n#| echo: false\n# Remove duplicates\ndf <- distinct(df)\n```\n\n```{r}\n#| echo: false\n# Create unique node list (ensuring no duplicates)\nnodes_info <- df %>%\n  select(name = c_name, category, definition) %>%\n  bind_rows(df %>% select(name = sub_name)) %>%\n  distinct(name, .keep_all = TRUE) \nnodes_info <- nodes_info %>%\n  mutate(category=replace_na(category, \"Other\"))\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Assign groups based on c_type (ensuring consistent order)\ncategory_levels <- unique(nodes_info$category)\nnodes_info$group <- as.numeric(factor(nodes_info$category, levels = category_levels)) \n\n# Define color palette based on the number of unique categories\nnum_categories <- length(category_levels)\ncolor_palette <- brewer.pal(min(num_categories, 9), \"Set1\")  # Supports up to 9 distinct colors\n\n# Define node shapes (cycling through if there are more categories)\nshapes <- c(\"dot\", \"triangle\", \"square\", \"diamond\", \"star\", \"hexagon\", \"ellipse\", \"box\", \"icon\")\nnodes_info$shape <- shapes[(nodes_info$group - 1) %% length(shapes) + 1]  # Cycles if needed\n\n# Assign color based on category\nnodes_info$color <- color_palette[(nodes_info$group - 1) %% length(color_palette) + 1]\n```\n\n```{r}\n#| echo: false\n# Create edges (relationships between nodes)\nedges_df <- df %>%\n  mutate(relation = gsub(\" \", \"_\", relation)) %>%\n  select(from = c_name, to = sub_name, label = relation)\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Ensure nodes_df only contains unique nodes before creating graph\nnodes_df <- data.frame(\n  id = nodes_info$name, \n  label = nodes_info$name, \n  group = nodes_info$group, \n  color = nodes_info$color, \n  shape = nodes_info$shape\n)\n```\n\n\n```{r}\n#| echo: false\n#| warning: false\ngraph <- graph_from_data_frame(d = edges_df, vertices = nodes_df, directed = TRUE)\n```\n\n```{r}\n#| echo: false\n# Calculate Centrality Metrics\ndegree_centrality <- degree(graph, mode = \"all\")  # Count all incoming/outgoing edges\ncloseness_centrality <- closeness(graph, mode = \"all\", normalized = TRUE)  # Closeness measure\n\n# Merge centrality scores into nodes_info\nnodes_info$degree_centrality <- degree_centrality[match(nodes_info$name, names(degree_centrality))]\nnodes_info$closeness_centrality <- closeness_centrality[match(nodes_info$name, names(closeness_centrality))]\n\n# Fix NA values (if a node has no edges, centrality might be NA)\nnodes_info$degree_centrality[is.na(nodes_info$degree_centrality)] <- 0\nnodes_info$closeness_centrality[is.na(nodes_info$closeness_centrality)] <- 0\n\n# Scale node size based on degree centrality\nnodes_df$size <- (nodes_info$degree_centrality + 1) * 5  # Scale up\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Create a proper legend\nlegend_df <- data.frame(\n  label = category_levels,\n  shape = shapes[1:num_categories],  # Match unique categories\n  color = color_palette[1:num_categories]\n)\n```\n\n## Network graph\n\n```{r}\n#| echo: false\n#| fig-cap: \"Banking Business Capabilities\"\n# Create interactive network graph\nvisNetwork(nodes_df, edges_df) %>%\n  visEdges(arrows = \"to\") %>%  # Add arrowheads\n  visNodes(size = nodes_df$size) %>%\n  visGroups(groupname = \"1\", color = color_palette[1], shape = shapes[1]) %>%\n  visGroups(groupname = \"2\", color = color_palette[2], shape = shapes[2]) %>%\n  visGroups(groupname = \"3\", color = color_palette[3], shape = shapes[3]) %>%\n  visGroups(groupname = \"4\", color = color_palette[4], shape = shapes[4]) %>%\n  visGroups(groupname = \"5\", color = color_palette[5], shape = shapes[5]) %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLayout(randomSeed = 42) %>%  # Consistent layout\n  visPhysics(enabled = TRUE) %>%\n  visLegend(addNodes = legend_df, useGroups = FALSE)\n```\n\n\n## Data Table\n\n```{r}\n#| echo: false\n#| warning: false\nnodes_df <- nodes_df %>%\n  left_join(\n    df %>% select(name = c_name, definition) %>% distinct(),\n    by = c(\"id\" = \"name\")\n  )\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Create interactive datatable of nodes with definitions\ndatatable(\n  nodes_info %>% select(name, category, definition, degree_centrality, closeness_centrality),\n  options = list(pageLength = 10, searchHighlight = TRUE),\n  rownames = FALSE,\n  caption = \"Nodes, Definitions, Categories, and Centrality Metrics\"\n)\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: false\n#| warning: false\n# Load necessary libraries\nlibrary(igraph)\nlibrary(visNetwork)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(tidyverse)\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Load CSV file\ncsv_file <- \"capab_rmd_cat.csv\"  # Change to your actual file path\ndf <- read_csv(csv_file)\n```\n\n```{r}\n#| echo: false\n# Remove duplicates\ndf <- distinct(df)\n```\n\n```{r}\n#| echo: false\n# Create unique node list (ensuring no duplicates)\nnodes_info <- df %>%\n  select(name = c_name, category, definition) %>%\n  bind_rows(df %>% select(name = sub_name)) %>%\n  distinct(name, .keep_all = TRUE) \nnodes_info <- nodes_info %>%\n  mutate(category=replace_na(category, \"Other\"))\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Assign groups based on c_type (ensuring consistent order)\ncategory_levels <- unique(nodes_info$category)\nnodes_info$group <- as.numeric(factor(nodes_info$category, levels = category_levels)) \n\n# Define color palette based on the number of unique categories\nnum_categories <- length(category_levels)\ncolor_palette <- brewer.pal(min(num_categories, 9), \"Set1\")  # Supports up to 9 distinct colors\n\n# Define node shapes (cycling through if there are more categories)\nshapes <- c(\"dot\", \"triangle\", \"square\", \"diamond\", \"star\", \"hexagon\", \"ellipse\", \"box\", \"icon\")\nnodes_info$shape <- shapes[(nodes_info$group - 1) %% length(shapes) + 1]  # Cycles if needed\n\n# Assign color based on category\nnodes_info$color <- color_palette[(nodes_info$group - 1) %% length(color_palette) + 1]\n```\n\n```{r}\n#| echo: false\n# Create edges (relationships between nodes)\nedges_df <- df %>%\n  mutate(relation = gsub(\" \", \"_\", relation)) %>%\n  select(from = c_name, to = sub_name, label = relation)\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Ensure nodes_df only contains unique nodes before creating graph\nnodes_df <- data.frame(\n  id = nodes_info$name, \n  label = nodes_info$name, \n  group = nodes_info$group, \n  color = nodes_info$color, \n  shape = nodes_info$shape\n)\n```\n\n\n```{r}\n#| echo: false\n#| warning: false\ngraph <- graph_from_data_frame(d = edges_df, vertices = nodes_df, directed = TRUE)\n```\n\n```{r}\n#| echo: false\n# Calculate Centrality Metrics\ndegree_centrality <- degree(graph, mode = \"all\")  # Count all incoming/outgoing edges\ncloseness_centrality <- closeness(graph, mode = \"all\", normalized = TRUE)  # Closeness measure\n\n# Merge centrality scores into nodes_info\nnodes_info$degree_centrality <- degree_centrality[match(nodes_info$name, names(degree_centrality))]\nnodes_info$closeness_centrality <- closeness_centrality[match(nodes_info$name, names(closeness_centrality))]\n\n# Fix NA values (if a node has no edges, centrality might be NA)\nnodes_info$degree_centrality[is.na(nodes_info$degree_centrality)] <- 0\nnodes_info$closeness_centrality[is.na(nodes_info$closeness_centrality)] <- 0\n\n# Scale node size based on degree centrality\nnodes_df$size <- (nodes_info$degree_centrality + 1) * 5  # Scale up\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Create a proper legend\nlegend_df <- data.frame(\n  label = category_levels,\n  shape = shapes[1:num_categories],  # Match unique categories\n  color = color_palette[1:num_categories]\n)\n```\n\n## Network graph\n\n```{r}\n#| echo: false\n#| fig-cap: \"Banking Business Capabilities\"\n# Create interactive network graph\nvisNetwork(nodes_df, edges_df) %>%\n  visEdges(arrows = \"to\") %>%  # Add arrowheads\n  visNodes(size = nodes_df$size) %>%\n  visGroups(groupname = \"1\", color = color_palette[1], shape = shapes[1]) %>%\n  visGroups(groupname = \"2\", color = color_palette[2], shape = shapes[2]) %>%\n  visGroups(groupname = \"3\", color = color_palette[3], shape = shapes[3]) %>%\n  visGroups(groupname = \"4\", color = color_palette[4], shape = shapes[4]) %>%\n  visGroups(groupname = \"5\", color = color_palette[5], shape = shapes[5]) %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLayout(randomSeed = 42) %>%  # Consistent layout\n  visPhysics(enabled = TRUE) %>%\n  visLegend(addNodes = legend_df, useGroups = FALSE)\n```\n\n\n## Data Table\n\n```{r}\n#| echo: false\n#| warning: false\nnodes_df <- nodes_df %>%\n  left_join(\n    df %>% select(name = c_name, definition) %>% distinct(),\n    by = c(\"id\" = \"name\")\n  )\n```\n\n```{r}\n#| echo: false\n#| warning: false\n# Create interactive datatable of nodes with definitions\ndatatable(\n  nodes_info %>% select(name, category, definition, degree_centrality, closeness_centrality),\n  options = list(pageLength = 10, searchHighlight = TRUE),\n  rownames = FALSE,\n  caption = \"Nodes, Definitions, Categories, and Centrality Metrics\"\n)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","title":"Capabilities network"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}