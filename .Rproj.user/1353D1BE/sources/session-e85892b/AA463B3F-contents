---
title: "Capabilities network"
format:
  html:
    toc: true
---

```{r}
#| echo: false
#| warning: false
# Load necessary libraries
library(igraph)
library(visNetwork)
library(readr)
library(dplyr)
library(RColorBrewer)
library(DT)
```

```{r}
#| echo: false
#| warning: false
# Load CSV file
csv_file <- "capab_rmd.csv"  # Change to your actual file path
df <- read_csv(csv_file)
```

```{r}
#| echo: false
# Remove duplicates
df <- distinct(df)
```

```{r}
#| echo: false
# Create nodes (unique c_name and sub_name)
nodes <- unique(c(df$c_name, df$sub_name))
nodes_df <- data.frame(id = nodes, label = nodes)
```

```{r}
#| echo: false
# Create edges (relationships between nodes)
edges_df <- df %>%
  mutate(relation = gsub(" ", "_", relation)) %>%  # Replace spaces in relation names
  select(from = c_name, to = sub_name, label = relation)
```

```{r}
#| echo: false
#| warning: false
graph <- graph_from_data_frame(d = edges_df, vertices = nodes_df, directed = TRUE)
```

```{r}
#| echo: false
# Calculate centrality measures
degree_centrality <- degree(graph, mode = "all")
betweenness_centrality <- betweenness(graph, normalized = TRUE)
closeness_centrality <- closeness(graph, normalized = TRUE)
```

```{r}
#| echo: false
# Normalize centrality values for visualization
nodes_df$degree <- degree_centrality[match(nodes_df$id, names(degree_centrality))]
nodes_df$betweenness <- betweenness_centrality[match(nodes_df$id, names(betweenness_centrality))]
nodes_df$closeness <- closeness_centrality[match(nodes_df$id, names(closeness_centrality))]
```

```{r}
#| echo: false
# Define color scale based on centrality
color_palette <- brewer.pal(9, "Blues")
nodes_df$color <- color_palette[cut(nodes_df$degree, breaks = 9, labels = FALSE)]

# Define node sizes based on centrality
nodes_df$size <- (nodes_df$degree + 1) * 5  # Scale up for visibility
```

## Network graph

```{r}
#| echo: false
#| fig-cap: "Banking Business Capabilities"
# Create interactive network graph
visNetwork(nodes_df, edges_df) %>%
  visEdges(arrows = "to") %>%  # Add arrowheads
  visNodes(shape = "dot") %>%
  visGroups(groupname = "Nodes", color = "lightblue") %>%
  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
  visLayout(randomSeed = 42) %>%  # Consistent layout
  visPhysics(enabled = TRUE)  # Enable force-directed layout
```


## Data Table

```{r}
#| echo: false
#| warning: false
nodes_df <- nodes_df %>%
  left_join(
    df %>% select(name = c_name, definition) %>% distinct(),
    by = c("id" = "name")
  )
```

```{r}
#| echo: false
#| warning: false
# Create interactive datatable of nodes with definitions
datatable(
  nodes_df %>% select(Node = id, Degree = degree, Betweenness = betweenness, Closeness = closeness, Definition = definition),
  options = list(pageLength = 10, autoWidth = TRUE),
  rownames = FALSE,
  caption = "Nodes Table with Centrality and Definitions"
)
```
